! Current issues
! balance rate not masked correctly if try to calculate slope during step 1?

check keywords warn
echo on

! Name of output files
$Step = "step2"

include "../parameters/Physical_Parameters.IN"

Header
  Mesh DB "../mesh" "taku"
  Results Directory "../results"
End

Constants
  Water Density = Real #rhow
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System  =  Cartesian 3D 
  Simulation Type = Transient     

  Extruded Mesh Levels = Integer #EM ! make vertical resolution finer than horizontal resolution?

  Timestepping Method = "bdf"
  BDF Order = 1
  TimeStep intervals = 100
  Timestep Sizes = Real 0.01 !1.0/365.25 ! in years
  Output Intervals = 1 

  Steady State Min Iterations = 1
  Steady State Max Iterations = 1

  Output File = $Step".result"
  Post File = $Step".vtu"

  ! We need a restart to have the ZsDEM and ZbDEM variables for
  ! the initial condition of Zs and Zb 
  Restart File = "step1.result"
  Restart Position = 0
  Restart Time = Real 0.0
  Restart Before Initial Conditions = Logical True
  max output level = 3

  Initialize Dirichlet Conditions = Logical False

  Dirty Finish = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! The ice 
Body 1
  Name = "ice"
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

Body 2
  Name = "surface"
  Equation = 2
  Body Force = 2
  Material = 1
  Initial Condition = 1
End

Body 3
  Name = "bedrock"
  Material = 1
  Initial Condition = 2
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  Zs = equals ZsDEM 
End

Initial Condition 2
  Zb = equals bedDEM
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = Real 0.0                          
  Flow BodyForce 2 = Real 0.0
  Flow BodyForce 3 = Real #-gravity 
End

Body Force 2
  Zs Accumulation Flux 1 = Real 0.0e0
  Zs Accumulation Flux 2 = Real 0.0e0
  
! surface slope norm
  slope = Variable "surfGrad 1", "surfGrad 2"
    REAL LUA "math.sqrt(tx[0]*tx[0]+tx[1]*tx[1])*180/3.14" ! slope is in degrees

  unmaskedBalanceRate = Variable Zs
    Real LUA "(dBdz*(tx[0] - 1/(2*k)*math.log(1 + math.exp(2*k*(tx[0]-zthreshold)))) + Bsl)"

  ! do not allow accumulation if the slope exceeds some angle (10 deg)
  ! would like to add "and" balanceRate > 0, but not working
  Zs Accumulation Flux 3 = equals unmaskedBalanceRate  
  Zs Accumulation Flux 3 Condition = Variable slope !, unmaskedBalanceRate
    Real LUA "(function() if tx[0]>10 then return -1.0 else return 1.0 end end)()"
    !Real LUA "(function() if (tx[0]>5 and tx[1]>0)  then return -1.0 else return 1.0 end end)()"

  ! repeating the accumulation flux for visualization purposes
  balanceRate = equals unmaskedBalanceRate  
  balanceRate Condition = Variable slope
    Real LUA "(function() if tx[0]>10  then return -1.0 else return 1.0 end end)()"

End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
  Density = Real #rhoi   

  Viscosity Model = String "glen"
  Viscosity = Real 1.0 ! use constant initial viscosity
  Glen Exponent = Real 3.0

  Limit Temperature = Real 0.0
  Rate Factor 1 = Real #A1
  Rate Factor 2 = Real #A2
  Activation Energy 1 = Real #Q1 
  Activation Energy 2 = Real #Q2  
  Glen Enhancement Factor = Real 1.0
  Critical Shear Rate = Real 1.0e-10

  ! Relative Temperature = Real 0.0
  
  Glen Allow Old Keywords = Logical True
  Constant Temperature = Real 0.0
  
  Cauchy = Logical True 
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Solver 1  
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  Active Coordinate = Integer 3
  Mesh Velocity Variable = String "dSdt"
  Mesh Update Variable = String "dS"
  Mesh Velocity First Zero = Logical True

  Top Surface Variable Name = String "Zs"

  Displacement Mode = Logical False
  Correct Surface = Logical True
  Minimum Height = Real 1.0
End

Solver 2
  Equation = "Free Surface Top"

  Variable = String "Zs" 
  Variable DOFs =  1
  Exported Variable 1 = String "Zs Residual"
  Exported Variable 1 DOFs = 1

  Procedure = "FreeSurfaceSolver" "FreeSurfaceSolver"
  Before Linsolve = "EliminateDirichlet" "EliminateDirichlet"

  Linear System Solver = Iterative
  Linear System Max Iterations = 1500
  Linear System Iterative Method = BiCGStab
  Linear System Preconditioning = ILU0
  Linear System Convergence Tolerance = Real 1.0e-9
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1

  Nonlinear System Max Iterations = 100
  Nonlinear System Convergence Tolerance  = 1.0e-6
  Nonlinear System Relaxation Factor = 1.00

  Steady State Convergence Tolerance = 1.0e-03

  Stabilization Method = Bubbles    
  Apply Dirichlet = Logical False ! No limiter needed for the upper surface

! How much the free surface is relaxed
  Relaxation Factor = Real 1.00
  
End


Solver 3
  Equation = "NormalVector"
  Procedure = "ElmerIceSolvers" "ComputeNormalSolver"

  Variable = String "Normal Vector"
  Variable DOFs = 3

  ComputeAll = Logical False
  Optimize Bandwidth = Logical False
End


Solver 4
  Equation = "HeightDepth"
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Operator 1 = Thickness
  Operator 2 = Depth
End

Solver 5
  Equation = "Surface Slope"
  Procedure = "../solvers/Compute2DNodalGradient" "Compute2DNodalGradient"
  Variable = -dofs 2 "surfGrad"
  Variable Name = String "Zs"
  Update Exported Variables = Logical True
  Exported Variable 1 = -dofs 1 "slope"
  Exported Variable 2 = -dofs 1 "balanceRate"
End


Solver 6
  Equation = "Stokes-Vec"
  Procedure = "IncompressibleNSVec" "IncompressibleNSSolver"
  ! Exec Solver = "Never"
  
  Stokes Flow = Logical True

  Nonlinear Update Exported Variables = Logical True 

  Div-Curl Discretization = Logical False

  !linear settings:
  !------------------------------

  Linear System Solver = Iterative
  Linear System Iterative Method = idrs !BiCGStabl ! "GCR" !idrs
  Linear System Robust = True
  Linear System Max Iterations  = 10000
  Linear System Preconditioning = ILU2
  ! Linear System Convergence Tolerance = 1.0e-08
  Linear System Residual Output = 100

  ! The following might be faster.
  Linear System Residual Mode = True
  Linear System Convergence Tolerance = 1.0e-04

  !Non-linear iteration settings:

  !------------------------------

  Nonlinear System Max Iterations = 50
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Newton After Iterations = 5
  Nonlinear System Newton After Tolerance = 1.0e-2
  Nonlinear System Reset Newton = Logical True
  ! make it safe abort if non-linear diverge
  Nonlinear System Abort Not Converged = Logical True
  ! Nonlinear System Relaxation Factor = 0.75

  ! Convergence on timelevel (not required here)
  !--------------------------------------------
  Steady State Convergence Tolerance = Real 1.0e-3

  ! This is minimal integration rule for extruded triangle.
  Number of Integration Points = Integer 21 ! 21, 28, 44, 64, ...

  ! Additional relaxation parameters to play with when using Newton's method
  Viscosity Newton Relaxation Factor = 0.7
  Friction Newton Relaxation Factor = 0.0

  ! 1st iteration viscosity is constant

  Constant-Viscosity Start = Logical True

  Exported Variable 1 = -dofs 1 "dSdt" 
  Exported Variable 2 = -dofs 1 "dS"
  Exported Variable 3 = -dofs 1 "Thickness"
End


Solver 7
  Equation = "Deviatoric Stress"
  Exec Solver = "Never" !"After Timestep"
  Procedure = "ElmerIceSolvers" "ComputeDevStress"          
  Variable = -nooutput "Sij"
  Variable DOFs = 1

  Exported Variable 1 = -dofs 6 "Stress" ! [Sxx, Syy, Szz, Sxy, Syz, Szx] in 3D
  Stress Variable Name = String "Stress"

  Flow Solver Name = String "Flow Solution"

  Linear System Solver = "Iterative"
  Linear System Iterative Method = "BiCGStab"
  Linear System Max Iterations = 300
  Linear System Convergence Tolerance = 1.0E-09
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "ILU0"
  Linear System Residual Output = 1
End


Solver 8
  Equation = "Strain Rate"
  Exec Solver = "Never" !"After Timestep"
  Procedure = "ElmerIceSolvers" "ComputeStrainRate"
! this is just a dummy, hence no output is needed
!-----------------------------------------------------------------------  
  Variable = -nooutput "Eij"
  Variable DOFs = 1

  Exported Variable 1 = "StrainRate"
  Exported Variable 1 DOFs = 7 ! exx, eyy, ezz, exy, eyz, ezx, e_e

! the name of the variable containing the flow solution (U,V,W,Pressure)
!-----------------------------------------------------------------------
  Flow Solver Name = String "Flow Solution"
! the name of the strain-rate solution (default is 'StrainRate')
  StrainRate Variable Name = String "StrainRate"
  
  Linear System Solver = "Iterative"
  Linear System Iterative Method = "BiCGStab"
  Linear System Max Iterations = 300
  Linear System Convergence Tolerance = 1.0E-09
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "ILU0"
  Linear System Residual Output = 1
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Equation 1
  Active Solvers(6) = 1 3 4 6 7 8
End

Equation 2
  Active Solvers(2) = 2 5
  Flow Solution Name = String "Flow Solution"
  Convection = String Computed
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Boundary Condition 1
!  Name = "outline"
!  Target Boundaries = 1
! End



Boundary Condition 1
  Target Boundaries = 1
  Name = "inflow"
  !External Pressure = Variable depth
  !  Real LUA "-tx[0]*rhoi*gravity"
  Mass Consistent Normals = Logical True
  Normal-Tangential Velocity = Logical True
  Velocity 1 = Real 0.0
End

Boundary Condition 2
  Name = "bedrock"
  Bottom Surface = Equals BedDEM   
  ComputeNormal = Logical True

  ! Velocity 1 = Real 0.0
  ! Velocity 2 = Real 0.0
  ! Velocity 3 = Real 0.0

! --------- Coulomb Sliding

!   Normal-Tangential Velocity = Logical True
!   Flow Force BC = Logical True
  
  !! Water pressure given through the Stokes 'External Pressure' parameter 
  !! (Negative = Compressive)
!   External Pressure = Real 0.0 !Equals Water Pressure

!   Velocity 1 = Real 0.0
  
!   Slip Coefficient 2 =  Variable Coordinate 1
!     Real Procedure "ElmerIceUSF" "Friction_Coulomb"
!   Slip Coefficient 3 =  Variable Coordinate 1
!     Real Procedure "ElmerIceUSF" "Friction_Coulomb"
    
  ! Parameters needed for the Coulomb Friction Law
!   Friction Law Sliding Coefficient = Real #As ! larger = more slip 
!   Friction Law Post-Peak Exponent  = Real #q      !(q=1)
!   Friction Law Maximum Value = Real #C        !(C=1)
!   Friction Law PowerLaw Exponent = Real #m       !(m = n = 3 Glen's law) 
!   Friction Law Linear Velocity = Real 1e-4
!--------------------------------------------


! --------- Weertman sliding
  Normal-Tangential Velocity = Logical True
  Flow Force BC = Logical True

  Velocity 1 = Real 0.0
  
  ! Slip Coefficient 2 =  Variable Coordinate 1
  !   Real Procedure "ElmerIceUSF" "Sliding_Weertman"
  ! Slip Coefficient 3 =  Variable Coordinate 1
  !    Real Procedure "ElmerIceUSF" "Sliding_Weertman"
    
  Weertman Friction Coefficient = Real 2.5e-2 !2.412579e-2        
  Weertman Exponent = Real #1.0/3.0
  Weertman Linear Velocity = Real 0.00001

!--------------------------------------------

  Mass Consistent Normals = Logical True
End

Boundary Condition 3
  Name = "surface"
  Body Id = 2

End
